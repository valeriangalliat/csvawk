#!/usr/bin/env python3

'''Usage: csvawk [options] <program> [<file>]

Arguments:
  <program>  The AWK program to execute.
  <file>     File to process.

Options:
  -h, --help                 Show this screen.
  --version                  Show version.
  -d, --delimiter=<char>     CSV delimiter [default: `,`].
  -e, --enclosure=<char>     CSV enclosure [default: `"`].
  --output-delimiter=<char>  Output delimiter if different.
  --output-enclosure=<char>  Output enclosure if different.
'''

import csv
import os
import sys

from docopt import docopt
from subprocess import Popen, PIPE

BEGIN = 'BEGIN {RS = ORS = "\\f" "0"; FS = OFS = "\\f" "1"}'
RS = '\f' + '0'
FS = '\f' + '1'


def input_filter():
    reader = csv.reader(sys.stdin)

    for row in reader:
        input = (FS.join(row) + RS)
        sys.stdout.write(input)


def output_filter():
    writer = csv.writer(sys.stdout)
    buffer = ''

    for char in iter(lambda: sys.stdin.read(1), ''):
        buffer += char

        if buffer[-2:] == RS:
            writer.writerow(buffer[0:-2].split(FS))
            buffer = ''


def main():
    if len(sys.argv) > 1:
        if sys.argv[1] == '--if':
            return input_filter()
        elif sys.argv[1] == '--of':
            return output_filter()

    args = docopt(__doc__, version='0.1')

    if args['<file>'] is None:
        input = sys.stdin
    else:
        input = open(args['<file>'], 'r')

    program = BEGIN + args['<program>']
    output = sys.stdout

    pinput = Popen([sys.argv[0], '--if'], stdin=input, stdout=PIPE)
    pawk = Popen(['awk', program], stdin=pinput.stdout, stdout=PIPE)
    poutput = Popen([sys.argv[0], '--of'], stdin=pawk.stdout, stdout=output)

    pinput.wait()
    pawk.wait()
    poutput.wait()


if __name__ == '__main__':
    main()
